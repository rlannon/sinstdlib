// SIN Standard Library
// Copyright 2020 Riley Lannon

// typecast.sin
// Implementation of the typecasting functions

include "../header/typecast.sinh";
include "../header/math.sinh";

alloc static const int ASCII_NUMERIC_BASE: 48;  // 48 is '0' in ASCII

// Integers

def string itos (alloc int n) {
    // itos
    // Converts a 32-bit signed integer to a string
    
    alloc string s: "";
    alloc bool negative: n < 0;
    while (n > 0) {
        alloc int d: n % 10;
        alloc char c: (ASCII_NUMERIC_BASE + d) as char;
        let s += c;
        let n /= 10;
    }

    if (negative) let s += '-';
    
    alloc string to_return: "";
    alloc int i &unsigned: s:len;
    while (i > 0) {
        let to_return += s[i - 1];
        let i -= 1;
    }

    return to_return;
}

def int stoi (alloc string s) {
    // stoi
    // Converts a string to a 32-bit signed integer

    // If the string contains illegal characters, returns 0
    
    alloc bool negative: s[0] = '-';
    alloc int n: 0;
    alloc int i &unsigned: s:len;
    alloc int exp &unsigned: 0;
    while (i > 0) {
        if (s[i - 1] as int >= 48 and s[i - 1] as int < 58) {
            let n += (s[i - 1] as int - ASCII_NUMERIC_BASE) * @pow(10, exp);
        }
        else {
            return 0;
        }

        let i -= 1;
    }

    if (negative)
        let n = -n;
    
    return n;
}

def int stoul &unsigned long (alloc string s) {
    // todo
    return 0 &unsigned long;
}

// Floats

def string sftos (alloc float n) {
    // todo
    return "";
}

def string dftos (alloc float n &long) {
    // todo
    return "";
}

def float stosf (alloc string s) {
    // todo
    return 0.0;
}

def float stodf &long (alloc string s) {
    // todo
    return 0.0 &long;
}

// Booleans

def bool stob (alloc string s) {
    // stob
    // Converts a string to a boolean

    // This follows the Python cast rule where a string of length 0 is 'false', otherwise it is 'true'
    
    return s:len as bool;
}

def string btos (alloc bool b) {
    if (b)
        return "true";
    else
        return "false";
}
